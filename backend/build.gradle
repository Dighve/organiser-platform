plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.flywaydb.flyway' version '9.22.3'
    id 'io.freefair.lombok' version '8.4'
}

group = 'com.organiser'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// Configure versions
ext {
    flywayVersion = '9.22.3'
    mysqlConnectorVersion = '8.0.33'
    mapstructVersion = '1.5.5.Final'
    testcontainersVersion = '1.19.3'
}

flyway {
    url = 'jdbc:mysql://localhost:3306/organiser_platform'
    user = 'root'
    password = 'password'
    baselineOnMigrate = true
    locations = ['classpath:db/migration']
    cleanDisabled = false
}

tasks.named('flywayMigrate') {
    dependsOn compileJava
}

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
        showStandardStreams = true
    }
    filter {
        includeTestsMatching 'com.organiser.platform.service.*'
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    testCompileOnly {
        extendsFrom testAnnotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.4"
        mavenBom "org.testcontainers:testcontainers-bom:1.18.3"
    }
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    
    // Database
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    // Jakarta Persistence API
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    
    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'com.icegreen:greenmail-junit5:2.0.0'
    
    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // Required for Java 17+
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Test containers for integration tests
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    testImplementation 'org.testcontainers:mysql:1.19.3'
    
    // AssertJ for fluent assertions
    testImplementation 'org.assertj:assertj-core:3.24.2'
    // Temporarily removed actuator due to compatibility issues
    // implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Test containers for integration testing
    testImplementation("org.testcontainers:testcontainers:${testcontainersVersion}") {
        exclude group: 'org.checkerframework', module: 'checker-qual'
    }
    testImplementation("org.testcontainers:junit-jupiter:${testcontainersVersion}") {
        exclude group: 'org.checkerframework', module: 'checker-qual'
    }
    testImplementation("org.testcontainers:mysql:${testcontainersVersion}") {
        exclude group: 'org.checkerframework', module: 'checker-qual'
    }
    
    // Database drivers for test containers
    testRuntimeOnly 'mysql:mysql-connector-java:8.0.33'
    
    // Spring JDBC for testing
    testImplementation 'org.springframework:spring-jdbc'
    
    // Flyway for testing
    testImplementation 'org.flywaydb:flyway-core'
    
    // Exclude JUnit 4 (vintage) as we're using JUnit 5 (jupiter)
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

// Test configuration moved to the dependencies section
